package auth

import (
	"encoding/hex"
	"encoding/json"
	"io"
	"net/http"
	"net/http/httptest"
	"strings"
	"testing"
)

func TestWebAuthNValidateNewUserHandler(t *testing.T) {
	ts := httptest.NewServer(WebAuthNValidateNewUserHandler())
	defer ts.Close()

	const body = `{"authenticatorAttachment":"cross-platform","id":"fE2qbackemPsxMSMclU39wBiPub2yGVs0Cx9yMwUK6KNjb1hBfL4XD-By7svlnU34tiZ5fBFFSlJOlx2nMgDlQ","rawId":"fE2qbackemPsxMSMclU39wBiPub2yGVs0Cx9yMwUK6KNjb1hBfL4XD+By7svlnU34tiZ5fBFFSlJOlx2nMgDlQ==","type":"public-key","response":{"attestationObject":"o2NmbXRkbm9uZWdhdHRTdG10oGhhdXRoRGF0YVjESZYN5YgOjGh0NBcPZHZgW4/krrmihjLHmVzzuoMdl2NBAAAAAgAAAAAAAAAAAAAAAAAAAAAAQHxNqm2nJHpj7MTEjHJVN/cAYj7m9shlbNAsfcjMFCuijY29YQXy+Fw/gcu7L5Z1N+LYmeXwRRUpSTpcdpzIA5WlAQIDJiABIVggKpAVTOPtbIHWwhn8+aLttWIgUi/LjnXUyfpwUBf+q4IiWCBTZEjt1MYcXSIn1cuIlpvqU5SH+ioqbyfQlBXRd0vtig==","clientDataJSON":"eyJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIiwiY2hhbGxlbmdlIjoibFdiSFRSQURmRTE3dXdRSDBlTEdTUSIsIm9yaWdpbiI6Imh0dHA6Ly9sb2NhbGhvc3Q6ODA5MSIsImNyb3NzT3JpZ2luIjpmYWxzZX0="}}`
	r, err := http.Post(ts.URL, "application/json", strings.NewReader(body))
	if err != nil {
		t.Error(err)
	}
	if r.StatusCode != 200 {
		t.Errorf("wanted r.StatusCode == 200 got %d", r.StatusCode)
	}

	var output map[string]interface{}
	dec := json.NewDecoder(r.Body)
	if err = dec.Decode(&output); err != nil && err != io.EOF {
		t.Error(err)
	}
	r.Body.Close()

	if len(output) != 0 {
		t.Errorf("wanted {}, got: %v", output)
	}
}

func TestDecodeAttestation(t *testing.T) {
	tests := map[string]struct {
		hexBytes string
	}{
		"attestation=none":   {hexBytes: "A363666D74646E6F6E656761747453746D74A068617574684461746158C449960DE5880E8C687434170F6476605B8FE4AEB9A28632C7995CF3BA831D976341000000020000000000000000000000000000000000407C4DAA6DA7247A63ECC4C48C725537F700623EE6F6C8656CD02C7DC8CC142BA28D8DBD6105F2F85C3F81CBBB2F967537E2D899E5F0451529493A5C769CC80395A50102032620012158202A90154CE3ED6C81D6C219FCF9A2EDB56220522FCB8E75D4C9FA705017FEAB82225820536448EDD4C61C5D2227D5CB88969BEA539487FA2A2A6F27D09415D1774BED8A"},
		"attestation=direct": {hexBytes: "a363666d74667061636b65646761747453746d74a363616c6726637369675847304502206e0ecb7805c302e90e3dceee97328fe784531e88bf33922e4f570ca0462692fb022100bff635cc1cd3f0e0a562839ad7ad92383f81c0b7f04579882e8885be4fc7048663783563815902dd308202d9308201c1a003020102020900d55b9c6897a2ca88300d06092a864886f70d01010b0500302e312c302a0603550403132359756269636f2055324620526f6f742043412053657269616c203435373230303633313020170d3134303830313030303030305a180f32303530303930343030303030305a306f310b300906035504061302534531123010060355040a0c0959756269636f20414231223020060355040b0c1941757468656e74696361746f72204174746573746174696f6e3128302606035504030c1f59756269636f205532462045452053657269616c20313735353037373538393059301306072a8648ce3d020106082a8648ce3d030107034200040106a9d07fea59fecba3dfaa1fc5e3daaf84b4df83fe33b4256c5fa3269f01d4117081c8854322c6ab6a07d7dde4cf792f4178cd2ecfbdb7b910803fb67b3b9da38181307f3013060a2b0601040182c40a0d0104050403050403302206092b0601040182c40a020415312e332e362e312e342e312e34313438322e312e373013060b2b0601040182e51c0201010404030205203021060b2b0601040182e51c01010404120410ee882879721c491397753dfcce97072a300c0603551d130101ff04023000300d06092a864886f70d01010b050003820101008434cafaea17c8d50abf33e4fa64e347291a9067c9c7a0975891c9011ff37641d01da340f9207ccf76b69669fdb01288dbffbd4f73dab23e2069a5e2431a8e5db89fa7c22fe67cfbacab6698cbaeaffbb8f973243a8fb02dd66f723c23fa359d5f475a14699153461c938b58c3af98fe127f2fc98d4ff39dbb68ea637fbe5a567c4fd1fe73d058873ddd1b5302890a581ffb70e6ccf42d7b9216b337b45ff4c847a182dc03c0035bcbd386ecaa947fb3b402bbe905c1453e3f2525fff5ffaa97930152631659cca5c7c0db2e98476907b8acf97e8ce2c586fdd725ea6b23fa141db56a71a24096cf299d9541b99a4e78d6fb73aa932333a52f444835c168e85e68617574684461746158c449960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d97634100000001ee882879721c491397753dfcce97072a004090b4048b1c645f2342b56739eb321bb4b764fd05f4576743e1e81a5fde71c1365e2502a0f26397771ab028a7f0ed2a00323b1a135623a2f3e73d28594b9730fda50102032620012158207c9434136350629e5c7024680d2e28c42b3574ed51597fbe0328eeb5693311c82258209bb19e1bbb66ab838fd4924864d38973fde885dec4db33a16e6b981b0fb51197"},
	}
	for name, tc := range tests {
		cbor, err := hex.DecodeString(tc.hexBytes)
		if err != nil {
			t.Errorf("%s: failed to decode hex: %v", name, err)
		}
		_, err = decodeAttestation(cbor)
		if err != nil {
			t.Errorf("%s: failed to decode CBOR: %v", name, err)
		}
	}
}

func TestDecodeCBOR(t *testing.T) {
	tests := map[string]struct {
		hexBytes string
	}{
		"attestation=none":   {hexBytes: "A363666D74646E6F6E656761747453746D74A068617574684461746158C449960DE5880E8C687434170F6476605B8FE4AEB9A28632C7995CF3BA831D976341000000020000000000000000000000000000000000407C4DAA6DA7247A63ECC4C48C725537F700623EE6F6C8656CD02C7DC8CC142BA28D8DBD6105F2F85C3F81CBBB2F967537E2D899E5F0451529493A5C769CC80395A50102032620012158202A90154CE3ED6C81D6C219FCF9A2EDB56220522FCB8E75D4C9FA705017FEAB82225820536448EDD4C61C5D2227D5CB88969BEA539487FA2A2A6F27D09415D1774BED8A"},
		"attestation=direct": {hexBytes: "a363666d74667061636b65646761747453746d74a363616c6726637369675847304502206e0ecb7805c302e90e3dceee97328fe784531e88bf33922e4f570ca0462692fb022100bff635cc1cd3f0e0a562839ad7ad92383f81c0b7f04579882e8885be4fc7048663783563815902dd308202d9308201c1a003020102020900d55b9c6897a2ca88300d06092a864886f70d01010b0500302e312c302a0603550403132359756269636f2055324620526f6f742043412053657269616c203435373230303633313020170d3134303830313030303030305a180f32303530303930343030303030305a306f310b300906035504061302534531123010060355040a0c0959756269636f20414231223020060355040b0c1941757468656e74696361746f72204174746573746174696f6e3128302606035504030c1f59756269636f205532462045452053657269616c20313735353037373538393059301306072a8648ce3d020106082a8648ce3d030107034200040106a9d07fea59fecba3dfaa1fc5e3daaf84b4df83fe33b4256c5fa3269f01d4117081c8854322c6ab6a07d7dde4cf792f4178cd2ecfbdb7b910803fb67b3b9da38181307f3013060a2b0601040182c40a0d0104050403050403302206092b0601040182c40a020415312e332e362e312e342e312e34313438322e312e373013060b2b0601040182e51c0201010404030205203021060b2b0601040182e51c01010404120410ee882879721c491397753dfcce97072a300c0603551d130101ff04023000300d06092a864886f70d01010b050003820101008434cafaea17c8d50abf33e4fa64e347291a9067c9c7a0975891c9011ff37641d01da340f9207ccf76b69669fdb01288dbffbd4f73dab23e2069a5e2431a8e5db89fa7c22fe67cfbacab6698cbaeaffbb8f973243a8fb02dd66f723c23fa359d5f475a14699153461c938b58c3af98fe127f2fc98d4ff39dbb68ea637fbe5a567c4fd1fe73d058873ddd1b5302890a581ffb70e6ccf42d7b9216b337b45ff4c847a182dc03c0035bcbd386ecaa947fb3b402bbe905c1453e3f2525fff5ffaa97930152631659cca5c7c0db2e98476907b8acf97e8ce2c586fdd725ea6b23fa141db56a71a24096cf299d9541b99a4e78d6fb73aa932333a52f444835c168e85e68617574684461746158c449960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d97634100000001ee882879721c491397753dfcce97072a004090b4048b1c645f2342b56739eb321bb4b764fd05f4576743e1e81a5fde71c1365e2502a0f26397771ab028a7f0ed2a00323b1a135623a2f3e73d28594b9730fda50102032620012158207c9434136350629e5c7024680d2e28c42b3574ed51597fbe0328eeb5693311c82258209bb19e1bbb66ab838fd4924864d38973fde885dec4db33a16e6b981b0fb51197"},
	}
	for name, tc := range tests {
		cbor, err := hex.DecodeString(tc.hexBytes)
		if err != nil {
			t.Errorf("%s: failed to decode hex: %v", name, err)
		}
		_, _, err = decodeCBOR(cbor)
		if err != nil {
			t.Errorf("%s: failed to decode CBOR: %v", name, err)
		}
	}
}
