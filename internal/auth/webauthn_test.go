package auth

import (
	"encoding/hex"
	"encoding/json"
	"github.com/google/go-cmp/cmp"
	"io"
	"net/http"
	"net/http/httptest"
	"strings"
	"testing"
)

func TestWebAuthNValidateNewUserHandler(t *testing.T) {
	w := WebAuthn{"localhost", "http://localhost:8091"}
	ts := httptest.NewServer(w.NewUserHandler())
	defer ts.Close()

	const body = `{"authenticatorAttachment":"cross-platform","id":"K-tYJlDMN27O7mpfPpKIJAXhXtwN6T3YS-qlV7lld8u_Fl73AIaGaRS0s880erEAYiz_EnsSc_wG4eahZx77Ew","rawId":"K+tYJlDMN27O7mpfPpKIJAXhXtwN6T3YS+qlV7lld8u/Fl73AIaGaRS0s880erEAYiz/EnsSc/wG4eahZx77Ew==","type":"public-key","response":{"attestationObject":"o2NmbXRmcGFja2VkZ2F0dFN0bXSjY2FsZyZjc2lnWEYwRAIgJWJaXrM0nyJze8LyZQHFoRzK/7NuYLuPh45oQ5YlQw8CIGsGH9g16G6QZuEsw0hQR8XcpMMnFQKJVsAgIlezzO94Y3g1Y4FZAt0wggLZMIIBwaADAgECAgkA1VucaJeiyogwDQYJKoZIhvcNAQELBQAwLjEsMCoGA1UEAxMjWXViaWNvIFUyRiBSb290IENBIFNlcmlhbCA0NTcyMDA2MzEwIBcNMTQwODAxMDAwMDAwWhgPMjA1MDA5MDQwMDAwMDBaMG8xCzAJBgNVBAYTAlNFMRIwEAYDVQQKDAlZdWJpY28gQUIxIjAgBgNVBAsMGUF1dGhlbnRpY2F0b3IgQXR0ZXN0YXRpb24xKDAmBgNVBAMMH1l1YmljbyBVMkYgRUUgU2VyaWFsIDE3NTUwNzc1ODkwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQBBqnQf+pZ/suj36ofxePar4S034P+M7QlbF+jJp8B1BFwgciFQyLGq2oH193kz3kvQXjNLs+9t7kQgD+2ezudo4GBMH8wEwYKKwYBBAGCxAoNAQQFBAMFBAMwIgYJKwYBBAGCxAoCBBUxLjMuNi4xLjQuMS40MTQ4Mi4xLjcwEwYLKwYBBAGC5RwCAQEEBAMCBSAwIQYLKwYBBAGC5RwBAQQEEgQQ7ogoeXIcSROXdT38zpcHKjAMBgNVHRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4IBAQCENMr66hfI1Qq/M+T6ZONHKRqQZ8nHoJdYkckBH/N2QdAdo0D5IHzPdraWaf2wEojb/71Pc9qyPiBppeJDGo5duJ+nwi/mfPusq2aYy66v+7j5cyQ6j7At1m9yPCP6NZ1fR1oUaZFTRhyTi1jDr5j+En8vyY1P8527aOpjf75aVnxP0f5z0FiHPd0bUwKJClgf+3DmzPQte5IWsze0X/TIR6GC3APAA1vL04bsqpR/s7QCu+kFwUU+PyUl//X/qpeTAVJjFlnMpcfA2y6YR2kHuKz5fozixYb91yXqayP6FB21anGiQJbPKZ2VQbmaTnjW+3OqkyMzpS9ESDXBaOheaGF1dGhEYXRhWMRJlg3liA6MaHQ0Fw9kdmBbj+SuuaKGMseZXPO6gx2XY0EAAAAB7ogoeXIcSROXdT38zpcHKgBAK+tYJlDMN27O7mpfPpKIJAXhXtwN6T3YS+qlV7lld8u/Fl73AIaGaRS0s880erEAYiz/EnsSc/wG4eahZx77E6UBAgMmIAEhWCANiQ9dX3eVHmd5JPk3kjzvPxM0762hhmPRFG6c6EgmBCJYIDAVggUYW9AFxXWlzNyW/dpGyIiBVmzO085fwOS0ugyg","clientDataJSON":"eyJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIiwiY2hhbGxlbmdlIjoiVXYzOEJ5R0NaVThXUDE4UG1tSWRjZyIsIm9yaWdpbiI6Imh0dHA6Ly9sb2NhbGhvc3Q6ODA5MSIsImNyb3NzT3JpZ2luIjpmYWxzZX0="}}`
	r, err := http.Post(ts.URL, "application/json", strings.NewReader(body))
	if err != nil {
		t.Error(err)
	}
	if r.StatusCode != 200 {
		body, _ := io.ReadAll(r.Body)
		t.Errorf("wanted r.StatusCode == 200 got %d\nHTTP Response: %s", r.StatusCode, body)
	}

	var output map[string]interface{}
	dec := json.NewDecoder(r.Body)
	if err = dec.Decode(&output); err != nil && err != io.EOF {
		t.Error(err)
	}
	r.Body.Close()

	if len(output) != 0 {
		t.Errorf("wanted {}, got: %v", output)
	}
}

func mustDecodeHex(t *testing.T, s string) []byte {
	t.Helper()
	h, err := hex.DecodeString(s)
	if err != nil {
		panic(err)
	}
	return h
}

func TestDecodeAttestation(t *testing.T) {
	tests := map[string]struct {
		cbor string
		att  *attestation
	}{
		"attestation=none": {
			cbor: "A363666D74646E6F6E656761747453746D74A068617574684461746158C449960DE5880E8C687434170F6476605B8FE4AEB9A28632C7995CF3BA831D976341000000020000000000000000000000000000000000407C4DAA6DA7247A63ECC4C48C725537F700623EE6F6C8656CD02C7DC8CC142BA28D8DBD6105F2F85C3F81CBBB2F967537E2D899E5F0451529493A5C769CC80395A50102032620012158202A90154CE3ED6C81D6C219FCF9A2EDB56220522FCB8E75D4C9FA705017FEAB82225820536448EDD4C61C5D2227D5CB88969BEA539487FA2A2A6F27D09415D1774BED8A",
			att: &attestation{
				Fmt:      "none",
				AuthData: mustDecodeHex(t, "49960DE5880E8C687434170F6476605B8FE4AEB9A28632C7995CF3BA831D976341000000020000000000000000000000000000000000407C4DAA6DA7247A63ECC4C48C725537F700623EE6F6C8656CD02C7DC8CC142BA28D8DBD6105F2F85C3F81CBBB2F967537E2D899E5F0451529493A5C769CC80395A50102032620012158202A90154CE3ED6C81D6C219FCF9A2EDB56220522FCB8E75D4C9FA705017FEAB82225820536448EDD4C61C5D2227D5CB88969BEA539487FA2A2A6F27D09415D1774BED8A"),
				AttStmt:  map[string]interface{}{},
			},
		},
		"attestation=direct": {
			cbor: "a363666d74667061636b65646761747453746d74a363616c6726637369675847304502206e0ecb7805c302e90e3dceee97328fe784531e88bf33922e4f570ca0462692fb022100bff635cc1cd3f0e0a562839ad7ad92383f81c0b7f04579882e8885be4fc7048663783563815902dd308202d9308201c1a003020102020900d55b9c6897a2ca88300d06092a864886f70d01010b0500302e312c302a0603550403132359756269636f2055324620526f6f742043412053657269616c203435373230303633313020170d3134303830313030303030305a180f32303530303930343030303030305a306f310b300906035504061302534531123010060355040a0c0959756269636f20414231223020060355040b0c1941757468656e74696361746f72204174746573746174696f6e3128302606035504030c1f59756269636f205532462045452053657269616c20313735353037373538393059301306072a8648ce3d020106082a8648ce3d030107034200040106a9d07fea59fecba3dfaa1fc5e3daaf84b4df83fe33b4256c5fa3269f01d4117081c8854322c6ab6a07d7dde4cf792f4178cd2ecfbdb7b910803fb67b3b9da38181307f3013060a2b0601040182c40a0d0104050403050403302206092b0601040182c40a020415312e332e362e312e342e312e34313438322e312e373013060b2b0601040182e51c0201010404030205203021060b2b0601040182e51c01010404120410ee882879721c491397753dfcce97072a300c0603551d130101ff04023000300d06092a864886f70d01010b050003820101008434cafaea17c8d50abf33e4fa64e347291a9067c9c7a0975891c9011ff37641d01da340f9207ccf76b69669fdb01288dbffbd4f73dab23e2069a5e2431a8e5db89fa7c22fe67cfbacab6698cbaeaffbb8f973243a8fb02dd66f723c23fa359d5f475a14699153461c938b58c3af98fe127f2fc98d4ff39dbb68ea637fbe5a567c4fd1fe73d058873ddd1b5302890a581ffb70e6ccf42d7b9216b337b45ff4c847a182dc03c0035bcbd386ecaa947fb3b402bbe905c1453e3f2525fff5ffaa97930152631659cca5c7c0db2e98476907b8acf97e8ce2c586fdd725ea6b23fa141db56a71a24096cf299d9541b99a4e78d6fb73aa932333a52f444835c168e85e68617574684461746158c449960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d97634100000001ee882879721c491397753dfcce97072a004090b4048b1c645f2342b56739eb321bb4b764fd05f4576743e1e81a5fde71c1365e2502a0f26397771ab028a7f0ed2a00323b1a135623a2f3e73d28594b9730fda50102032620012158207c9434136350629e5c7024680d2e28c42b3574ed51597fbe0328eeb5693311c82258209bb19e1bbb66ab838fd4924864d38973fde885dec4db33a16e6b981b0fb51197",
			att: &attestation{
				Fmt:      "packed",
				AuthData: mustDecodeHex(t, "49960DE5880E8C687434170F6476605B8FE4AEB9A28632C7995CF3BA831D97634100000001EE882879721C491397753DFCCE97072A004090B4048B1C645F2342B56739EB321BB4B764FD05F4576743E1E81A5FDE71C1365E2502A0F26397771AB028A7F0ED2A00323B1A135623A2F3E73D28594B9730FDA50102032620012158207C9434136350629E5C7024680D2E28C42B3574ED51597FBE0328EEB5693311C82258209BB19E1BBB66AB838FD4924864D38973FDE885DEC4DB33A16E6B981B0FB51197"),
				AttStmt: map[string]interface{}{
					"alg": -7,
					"sig": mustDecodeHex(t, "304502206E0ECB7805C302E90E3DCEEE97328FE784531E88BF33922E4F570CA0462692FB022100BFF635CC1CD3F0E0A562839AD7AD92383F81C0B7F04579882E8885BE4FC70486"),
					"x5c": []interface{}{
						mustDecodeHex(t
					},
				},
			},
		},
	}
	for name, tc := range tests {
		a, err := decodeAttestation(mustDecodeHex(t, tc.cbor))
		if err != nil {
			t.Errorf("%s: failed to decode CBOR: %v", name, err)
		}
		if diff := cmp.Diff(tc.att, a); diff != "" {
			t.Errorf("%s: mismatch (-want +got):\n%s", name, diff)
		}
	}
}

func TestDecodeCBOR(t *testing.T) {
	tests := map[string]struct {
		hexBytes string
	}{
		"attestation=none":   {hexBytes: "A363666D74646E6F6E656761747453746D74A068617574684461746158C449960DE5880E8C687434170F6476605B8FE4AEB9A28632C7995CF3BA831D976341000000020000000000000000000000000000000000407C4DAA6DA7247A63ECC4C48C725537F700623EE6F6C8656CD02C7DC8CC142BA28D8DBD6105F2F85C3F81CBBB2F967537E2D899E5F0451529493A5C769CC80395A50102032620012158202A90154CE3ED6C81D6C219FCF9A2EDB56220522FCB8E75D4C9FA705017FEAB82225820536448EDD4C61C5D2227D5CB88969BEA539487FA2A2A6F27D09415D1774BED8A"},
		"attestation=direct": {hexBytes: "a363666d74667061636b65646761747453746d74a363616c6726637369675847304502206e0ecb7805c302e90e3dceee97328fe784531e88bf33922e4f570ca0462692fb022100bff635cc1cd3f0e0a562839ad7ad92383f81c0b7f04579882e8885be4fc7048663783563815902dd308202d9308201c1a003020102020900d55b9c6897a2ca88300d06092a864886f70d01010b0500302e312c302a0603550403132359756269636f2055324620526f6f742043412053657269616c203435373230303633313020170d3134303830313030303030305a180f32303530303930343030303030305a306f310b300906035504061302534531123010060355040a0c0959756269636f20414231223020060355040b0c1941757468656e74696361746f72204174746573746174696f6e3128302606035504030c1f59756269636f205532462045452053657269616c20313735353037373538393059301306072a8648ce3d020106082a8648ce3d030107034200040106a9d07fea59fecba3dfaa1fc5e3daaf84b4df83fe33b4256c5fa3269f01d4117081c8854322c6ab6a07d7dde4cf792f4178cd2ecfbdb7b910803fb67b3b9da38181307f3013060a2b0601040182c40a0d0104050403050403302206092b0601040182c40a020415312e332e362e312e342e312e34313438322e312e373013060b2b0601040182e51c0201010404030205203021060b2b0601040182e51c01010404120410ee882879721c491397753dfcce97072a300c0603551d130101ff04023000300d06092a864886f70d01010b050003820101008434cafaea17c8d50abf33e4fa64e347291a9067c9c7a0975891c9011ff37641d01da340f9207ccf76b69669fdb01288dbffbd4f73dab23e2069a5e2431a8e5db89fa7c22fe67cfbacab6698cbaeaffbb8f973243a8fb02dd66f723c23fa359d5f475a14699153461c938b58c3af98fe127f2fc98d4ff39dbb68ea637fbe5a567c4fd1fe73d058873ddd1b5302890a581ffb70e6ccf42d7b9216b337b45ff4c847a182dc03c0035bcbd386ecaa947fb3b402bbe905c1453e3f2525fff5ffaa97930152631659cca5c7c0db2e98476907b8acf97e8ce2c586fdd725ea6b23fa141db56a71a24096cf299d9541b99a4e78d6fb73aa932333a52f444835c168e85e68617574684461746158c449960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d97634100000001ee882879721c491397753dfcce97072a004090b4048b1c645f2342b56739eb321bb4b764fd05f4576743e1e81a5fde71c1365e2502a0f26397771ab028a7f0ed2a00323b1a135623a2f3e73d28594b9730fda50102032620012158207c9434136350629e5c7024680d2e28c42b3574ed51597fbe0328eeb5693311c82258209bb19e1bbb66ab838fd4924864d38973fde885dec4db33a16e6b981b0fb51197"},
	}
	for name, tc := range tests {
		cbor, err := hex.DecodeString(tc.hexBytes)
		if err != nil {
			t.Errorf("%s: failed to decode hex: %v", name, err)
		}
		_, _, err = decodeCBOR(cbor)
		if err != nil {
			t.Errorf("%s: failed to decode CBOR: %v", name, err)
		}
	}
}
